{"version":3,"sources":["webpack://ei2030/./src/pages/index.js"],"names":["WorkingGroupList","query","render","data","allWorkingGroupPage","nodes","map","name","workingGroup","path","key","to"],"mappings":"oIAGMA,EAAmB,kBACvB,gBAAC,KAAD,CACEC,MAAK,aAqBLC,OAAQ,SAACC,GAAD,OACN,0BACGA,EAAKC,oBAAoBC,MAAMC,KAC9B,gBAAmBC,EAAnB,EAAGC,aAAgBD,KAAQE,EAA3B,EAA2BA,KAA3B,OACE,sBAAIC,IAAKH,GACP,gBAAC,KAAD,CAAMI,GAAIF,GAAOF,YAqB/B,UAXkB,WAChB,OACE,4BACE,uCACA,4CAEA,gBAACP,EAAD","file":"component---src-pages-index-js-3a8753f3163a5bdc860f.js","sourcesContent":["import * as React from \"react\";\nimport { Link, StaticQuery, graphql } from \"gatsby\";\n\nconst WorkingGroupList = () => (\n  <StaticQuery\n    query={graphql`\n      {\n        allWorkingGroupPage(\n          filter: {\n            file: {\n              name: { eq: \"index\" }\n              relativeDirectory: { eq: \"website\" }\n            }\n          }\n        ) {\n          nodes {\n            workingGroup {\n              name\n            }\n            path: gatsbyPath(\n              filePath: \"/groups/{WorkingGroupPage.workingGroupName}/{WorkingGroupPage.fileName}\"\n            )\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <ul>\n        {data.allWorkingGroupPage.nodes.map(\n          ({ workingGroup: { name }, path }) => (\n            <li key={name}>\n              <Link to={path}>{name}</Link>\n            </li>\n          )\n        )}\n      </ul>\n    )}\n  />\n);\n\n// markup\nconst IndexPage = () => {\n  return (\n    <main>\n      <title>EI2030</title>\n      <h1>Working Groups</h1>\n\n      <WorkingGroupList />\n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}